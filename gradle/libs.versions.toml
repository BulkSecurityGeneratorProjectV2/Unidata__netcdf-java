[versions]
autoValue = "1.7.4"
autoValueAnnotations = "1.8"
commonsIo = "2.5"
groovyAll = "2.5.12"
guava = "31.0.1-jre"
jcommander = "1.81"
jdom2 = "2.0.6"
jj2000 = "5.4"
jsoup = "1.14.3"
jsr305 = "3.0.2"
junit = "4.13.2"
logback = "1.2.9"
mockito = "2.28.2"
protobuf = "3.19.1"
re2j = "1.6"
slf4j = "1.7.32"
spock = "1.3-groovy-2.5"
truth = "1.1"

[libraries]
# = { group = "", name = "", version.ref = "" }

# cdm-core
autoValue = { group = "com.google.auto.value", name = "auto-value", version.ref = "autoValue" }

# cdm-core
autoValueAnnotations = { group = "com.google.auto.value", name = "auto-value-annotations", version.ref = "autoValueAnnotations" }

# cdm-core, bufr, grib
guava = { group = "com.google.guava", name = "guava", version.ref = "guava" }

# command line parsing
# cdm-core, bufr, grib
jcommander = { group = "com.beust", name = "jcommander", version.ref = "jcommander" }

# cdm-core, bufr, grib
jdom2 = { group = "org.jdom", name = "jdom2", version.ref = "jdom2" }

# grib
jj2000 = { group = "edu.ucar", name = "jj2000", version.ref = "jj2000" }

# Annotations: Nullable
# udunits, cdm-core, bufr, grib
jsr305 = { group = "com.google.code.findbugs", name = "jsr305", version.ref = "jsr305" }

# control protobuf artifact versions using the protobuf-bom
# see also netcdf-java-platform/build.gradle.kts
protobufBom = { group = "com.google.protobuf", name = "protobuf-bom", version.ref = "protobuf" }
# cdm-core, bufr, grib
protobufJava = { group = "com.google.protobuf", name = "protobuf-java" }

# cdm-core, bufr, grib
re2j = { group = "com.google.re2j", name = "re2j", version.ref = "re2j" }

# udunits (test), cdm-core, bufr, grib
slf4j = { group = "org.slf4j", name = "slf4j-api", version.ref = "slf4j" }

#####################
# test dependencies #
#####################

# cdm-core
commonsIo = { group = "commons-io", name = "commons-io", version.ref = "commonsIo" }

# cdm-core
groovyAll = { group = "org.codehaus.groovy", name = "groovy-all", version.ref = "groovyAll" }
mockitoCore = { group = "org.mockito", name = "mockito-core", version.ref = "mockito" }
spockCore = { group = "org.spockframework", name = "spock-core", version.ref = "spock" }

# grib
jsoup = { group = "org.jsoup", name = "jsoup", version.ref = "jsoup" }

# udunits, cdm-core
junit = { group = "junit", name = "junit", version.ref = "junit" }

# udunits, cdm-core, bufr, grib
truth = { group = "com.google.truth", name = "truth", version.ref = "truth" }

# cdm-core, grib
truthJava8Extension = { group = "com.google.truth.extensions", name = "truth-java8-extension", version.ref = "truth" }

# udunits, cdm-core, bufr, grib
logbackClassic = { group = "ch.qos.logback", name = "logback-classic", version.ref = "logback" }

#   buildPlugins = [:]
#   buildPlugins.gretty = 'org.gretty:gretty:3.0.3'
#   buildPlugins.shadow = 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
#   buildPlugins.sonarqube = 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.0'
#   buildPlugins.spotless = 'com.diffplug.spotless:spotless-plugin-gradle:4.5.1'
#   buildPlugins.protobuf = 'com.google.protobuf:protobuf-gradle-plugin:0.8.12'
#   buildPlugins.depcheck = 'org.owasp:dependency-check-gradle:6.0.2'
#   buildPlugins.nexus = 'edu.ucar.unidata:unidata-nexus-gradle:0.0.1'
#   buildPlugins.jekyll = 'edu.ucar.unidata.site:jekyll-plugin:0.0.5'
#
#   // need to define the versions of protobuf and grpc here because they are needed in the protobuf configuration
#   // closure, and the version defined in eiter the java platform cannot be accessed from within the closure.
#   depVersion.protobuf = '3.19.1'
#   depVersion.grpc = '1.42.1'

[plugins]
# bufr, grib
protobufPlugin = { id = "com.google.protobuf", version = "0.8.18" }
